<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/favicon.ico"
		location="/resources/common/images/favicon.ico" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="kr.co.infStudy" />

	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean
				class="kr.co.infStudy.interceptor.CoursesAsideInterceptor" />
		</interceptor>
	</interceptors>

	<!-- 파일 업로드를 위한 bean 추가 -->
	<beans:bean
		class='org.springframework.web.multipart.support.StandardServletMultipartResolver'
		id='multipartResolver' />


	<!-- MessageSource를 등록한다 -->
	<beans:bean
		class='org.springframework.context.support.ReloadableResourceBundleMessageSource'
		id='messageSource'>
		<beans:property name="basenames">
			<beans:list>
				<!-- <beans:value>/WEB-INF/properties/error_message</beans:value> -->
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Message 접근을 위한 접근자 등록 -->
	<beans:bean
		class='org.springframework.context.support.MessageSourceAccessor'>
		<beans:constructor-arg ref='messageSource' />
	</beans:bean>

	<!-- 인터셉터 객체 생성 -->
	<beans:bean id="loginInterceptor"
		class="kr.co.infStudy.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="loginAfterInterceptor" class="kr.co.infStudy.interceptor.LoginAfterInterceptor"></beans:bean>
	   <!-- INterceptor설정 -->
	
   <interceptors>
      <interceptor>
         <mapping path="/dashboard" />
         <mapping path="/course/*/lecture/*" />
         <mapping path="/logout" />
         <mapping path="/profile"/>
         <mapping path="/byeUserForm"/>
         <beans:ref bean="loginInterceptor" />
      </interceptor>
      <interceptor>
         <mapping path="/loginForm"/>
         <mapping path="/signupForm"/>
         <beans:ref bean="loginAfterInterceptor"/>
      </interceptor>
   </interceptors>
   
	<!-- 아래 내용은 로그아웃후 뒤로가기버튼눌렀을때 다시 로그인 되는것을 방지하기 위함. -->
	<beans:bean id="webContentInterceptor"
		class="org.springframework.web.servlet.mvc.WebContentInterceptor">
		<beans:property name="cacheSeconds" value="0" />
		<beans:property name="useExpiresHeader" value="true" />
		<beans:property name="useCacheControlHeader"
			value="true" />
		<beans:property name="useCacheControlNoStore"
			value="true" />
		<beans:property name="cacheMappings">
			<beans:props> <!-- 아래 경로에만 뒤로가기 제한시킴. -->
				<beans:prop key="dashboard">86400</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- naver -->
	<beans:bean id="naverLoginBO"
		class="kr.co.infStudy.oauth.NaverLoginBO" />


	<!-- google -->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg
			value="252146089104-nlga2d1e1p5nau160o40c4vromare5jk.apps.googleusercontent.com" />
		<beans:constructor-arg
			value="45oDoQKfHtrsB4JkgXL7JkS5" />
	</beans:bean>

	<beans:bean id="googleOAuth2Parameters"
		class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope"
			value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri"
			value="http://localhost:8090/infStudy/oauth2callback" />
	</beans:bean>

	<!-- 로그를 찍기 위한 aop 등록 -->
	<aop:config proxy-target-class="true" />
	<beans:bean id="loggingAop"
		class="kr.co.infStudy.aop.LoggingAop" />
	<aop:config>
		<aop:aspect ref="loggingAop">
			<aop:around method="aroundAdvice"
				pointcut="execution(* kr.co.infStudy.controller.*.*(..))" />
		</aop:aspect>
	</aop:config>

</beans:beans>










