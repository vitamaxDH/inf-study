<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.infStudy.lectureMapper">
   
   <insert id="addLecture" parameterType="kr.co.infStudy.model.LectureVO">
   		INSERT INTO LECTURE(L_NO, I_NO, CTG_NO, TITLE, PRICE, DIFFICULTY, IMG, REL_DT, CONTENT)
   		VALUES(LECTURE_SEQ.NEXTVAL, #{i_no}, #{ctg_no}, #{title}, #{price}, #{difficulty}, #{img, jdbcType=VARCHAR}, SYSDATE, #{content, jdbcType=VARCHAR})
   </insert>
   
   <!-- 
   		강의 목록 가져오기
    -->
	<select id="getLectureInfo" parameterType="java.util.HashMap" resultType="kr.co.infStudy.dto.lecture.LectureDTO">
			<![CDATA[
			select lec_t.title, lec_t.content, lec_t.price, lec_t.img, ctg_t.name as category, u_t.nickname as teacher
				from lecture lec_t, users u_t, category ctg_t
			where lec_t.i_no = u_t.i_no and lec_t.ctg_no = ctg_t.ctg_no 
			]]>  
			<if test="category_name != null">
				and ctg_t.name = #{category_name}
			</if>
						
			<if test="lecture_title != null">
				and lec_t.title like '%' || #{lecture_title} || '%'
			</if>
			
			<if test="sort == 'price'">
				order by lec_t.price
			</if>			
   </select>

	<!-- 수강 중인 강의 목록 가져오기 -->
	<select id="getMyLectureInfo" parameterType="java.util.HashMap" resultType="kr.co.infStudy.dto.lecture.MyLecturesDTO">
			<![CDATA[
			SELECT LEC_T.L_NO, LEC_T.TITLE, LEC_T.IMG, U_T.NICKNAME TEACHER, LEC_T.CONTENT
  				    FROM LECTURE LEC_T, USERS U_T, PAID_LEC PL_T
					WHERE LEC_T.L_NO = PL_T.L_NO AND 
				          PL_T.U_NO = U_T.U_NO AND 
				          U_T.U_NO = #{u_no}
			]]>
			<if test="lecture_title != null">
				AND LEC_T.TITLE LIKE '%' || #{lecture_title} || '%'
			</if>
			ORDER BY PL_T.PAID_DT DESC
   </select>
   
   <!-- 
   		수강중인 강의에 대한 페이징 처리
    -->
	<select id="getMyLectureCnt" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		<![CDATA[
			select count(*) from paid_lec where u_no = #{u_no}
		]]>
	</select>   
   
      <!-- 
   		페이징처리
    -->
	<select id="getLectureCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(*) FROM LECTURE LEC
		]]>
		
		<if test="category_name != null">
		 , CATEGORY CTG WHERE LEC.CTG_NO = CTG.CTG_NO AND CTG.NAME = #{category_name} 
		</if>

   </select>

	<select id="getLectureDetail" parameterType="java.lang.String" resultType="kr.co.infStudy.dto.lecture.LectureDetailDTO">
	<![CDATA[	
	SELECT L_T.L_NO, U_T.I_NO, L_T.TITLE AS LECTURE_TITLE, L_T.CONTENT, U_T.NICKNAME AS TEACHER, L_T.IMG, 
	      (SELECT AVG(RANK) FROM REVIEW WHERE L_NO =(SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS RANK_AVG,
	      (SELECT COUNT(*) FROM REVIEW WHERE L_NO = (SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS REVIEW_CNT, 
	      (SELECT COUNT(*) FROM PAID_LEC WHERE L_NO = (SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS STUDENT_CNT,
	      CTG_T.NAME AS CATEGORY, L_T.PRICE, L_T.DIFFICULTY,
	      (SELECT COUNT(*) FROM CURRICULUM WHERE L_NO = (SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS CURRICULUM_CNT, 
	      (SELECT SUM(PLAYTIME) FROM CURRICULUM WHERE L_NO = (SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS TOTAL_RUNTIME,
	      (SELECT COUNT(*) FROM WISH_LIST WHERE L_NO = (SELECT L_NO FROM LECTURE WHERE TITLE = #{lecture_title})) AS WISHLIST_CNT
	FROM LECTURE L_T, USERS U_T, CATEGORY CTG_T 
	WHERE L_T.I_NO = U_T.I_NO AND L_T.CTG_NO = CTG_T.CTG_NO AND L_T.TITLE = #{lecture_title}
	]]>
   </select>
   
   <select id="chkTitle" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT TITLE FROM LECTURE WHERE TITLE = #{lecture_title}
   </select>

   <select id="getLectureFileNames" parameterType="java.util.HashMap" resultType="java.lang.String">
	
   </select>

   <select id="select" resultType="kr.co.infStudy.model.LectureVO">
   
   </select>
   
   <update id="update" parameterType="kr.co.infStudy.model.LectureVO">
   
   </update>
   
   <delete id="delete" parameterType="kr.co.infStudy.model.LectureVO">
   
   </delete>
</mapper>